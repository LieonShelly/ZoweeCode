//
//  ZEPesonalCenterViewController.swift
//  WelcomeNewHome
//
//  Created by lieon on 16/7/7.
//  Copyright © 2016年 TH. All rights reserved.
//

import UIKit
//import FDFullscreenPopGesture

class ZEPesonalCenterViewController: ZEBaseViewController,UITableViewDelegate,UITableViewDataSource{
    private let cellIdentifier = "Cell"
    let profileHeader = ZEProfileHeader()
    
    override func viewWillDisappear(animated: Bool) {
        super.viewWillDisappear(animated)
        
    }
    
    override func viewWillAppear(animated: Bool) {
        super.viewWillAppear(animated)
<<<<<<< .mine
        navigationController?.navigationBar.hidden = true
        self.navigationController?.navigationBar.barStyle = UIBarStyle.Black
=======
        navigationController?.navigationBar.hidden = true
       // self.navigationController?.navigationBar.barStyle = UIBarStyle.Black
>>>>>>> .r2813
    }
    

    override func viewDidLoad() {
        super.viewDidLoad()
        //self.fd_prefersNavigationBarHidden = true
        setup()
        
        GUIInit()
        
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    func setup(){

//        title = " "
        view.addSubview(naviBar1)
        naviBar1.snp_makeConstraints { (make) in
            make.left.equalTo(0)
            make.top.equalTo(view.snp_top)
            make.right.equalTo(0)
            make.height.equalTo(64)
        }
        title = "个人中心"
    }
    
    private lazy var naviBar1:UIView = {
       let navi = UIView()
        navi.backgroundColor = UIColor(hexString: "5abee6")
        navi.addSubview(self.leftBtn1)
        navi.addSubview(self.rightBtn1)
        navi.addSubview(self.titleBtn1)
        self.leftBtn1.snp_makeConstraints { (make) in
            make.centerY.equalTo(navi.snp_centerY).offset(10)
            make.left.equalTo(10)
            make.width.equalTo(44)
            make.height.equalTo(44)
        }
        self.rightBtn1.snp_makeConstraints { (make) in
            make.right.equalTo(-10)
            make.centerY.equalTo(navi.snp_centerY).offset(10)
            make.width.equalTo(44)
            make.height.equalTo(44)
        }
        self.titleBtn1.snp_makeConstraints { (make) in
            make.centerX.equalTo(navi.snp_centerX)
            make.centerY.equalTo(navi.snp_centerY).offset(10)
            make.width.equalTo(self.titleBtn1.snp_width)
            make.height.equalTo(self.titleBtn1.snp_height)
        }
        return navi
    }()
    
    private lazy var leftBtn1:UIButton = {
        let leftBtn:UIButton = UIButton.createButton(self, action: #selector(ZEPesonalCenterViewController.leftBtnClick1), imageName:"icon_back_灰")
        return leftBtn
    }()
    
    private lazy var rightBtn1:UIButton = {
        let rightBtn:UIButton = UIButton.createButton(self, action:#selector(ZEPesonalCenterViewController.right), imageName: "icon_setting")
        return rightBtn
    }()
    
    private lazy var titleBtn1:UIButton = {
        let btn = UIButton()
        btn.setTitle("个人中心", forState: UIControlState.Normal)
        btn.sizeToFit()
        btn.titleLabel?.font = UIFont.boldSystemFontOfSize(17)
        return btn
    }()
    
    private lazy var profileTbView: UITableView = {
        let profileTbView = UITableView()
        profileTbView.separatorStyle = UITableViewCellSeparatorStyle.None
        
        return profileTbView
    }()

    
    // MARK:Events
    func leftBtnClick1() {
        
        self.navigationController!.popViewControllerAnimated(true)
    }
    
    func right() {
        let sb = UIStoryboard.init(name: "ZPersonalCenter", bundle: nil)
        let SettingVC = sb.instantiateViewControllerWithIdentifier("ZESettingViewController")
        self.navigationController!.pushViewController(SettingVC, animated: true)
    }
    
    func GUIInit(){
        
        //头部视图 && tableView
        profileTbView.delegate = self
        profileTbView.dataSource = self
        self.view.addSubview(profileTbView)
        profileTbView.snp_makeConstraints { (make) in
            make.bottom.equalTo(self.view)
            make.left.equalTo(self.view)
            make.right.equalTo(self.view)
            make.top.equalTo(self.view.snp_top).inset(64)
        }
        
        let headerView = UIView(frame: CGRectMake(0, 0, ScreenW, 194*AdaptationRatioH))
        headerView.addSubview(profileHeader)
        profileTbView.tableHeaderView = headerView
        //注册cell
        profileTbView.registerNib(UINib.init(nibName: "ZEProfileCell", bundle: nil), forCellReuseIdentifier: cellIdentifier)
    }
    
    //MARK:设置header效果
    func scrollViewDidScroll(scrollView: UIScrollView) {
        
        if scrollView.contentOffset.y < 0 {
            let offset = -scrollView.contentOffset.y
            profileHeader.frame = CGRectMake(0, -offset, ScreenW, 194*AdaptationRatioH + offset)
        }else{
            profileHeader.frame = CGRectMake(0, 0, ScreenW, 194*AdaptationRatioH)
        }
    }
    
    //MARK:DataSource
    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int{
        return 7
    }
    
    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        let profileCell: ZEProfileCell = tableView.dequeueReusableCellWithIdentifier(cellIdentifier, forIndexPath: indexPath)as! ZEProfileCell
        switch indexPath.row {
        case 0:
            profileCell.model = ZENormalCellModel(imgName: "icon_order", titleStr: "我的订单")
        case 1:
            profileCell.model = ZENormalCellModel(imgName: "icon_msg", titleStr: "消息中心")
        case 2:
            profileCell.model = ZENormalCellModel(imgName: "icon_manage", titleStr: "装修管理")
        case 3:
            profileCell.model = ZENormalCellModel(imgName: "icon_center", titleStr: "福利中心")
            //消息数量小球
            let lab = ZEMsgCountLabel.init(frame: CGRectMake(118, 23, 13, 13))
            lab.text = "10"
            
            profileCell.contentView.addSubview(lab)
            
        case 4:
            profileCell.model = ZENormalCellModel(imgName: "icon_cost", titleStr: "费用计算")
        case 5:
            profileCell.model = ZENormalCellModel(imgName: "icon_suggestion", titleStr: "投诉建议")
        case 6:
            profileCell.model = ZENormalCellModel(imgName: "icon_contant", titleStr: "联系我们")
            profileCell.isLastLine = true
            
        default:
            break
        }
        return profileCell
    }
    
    func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {
        return 46
    }
    
    //MARK:Delegate
    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath){
        tableView.deselectRowAtIndexPath(indexPath, animated: true)
        switch indexPath.row {
        case 0:
            self.navigationController?.pushViewController(ZEMyOderViewController.init(), animated: true)
        case 1:
            self.navigationController?.pushViewController(ZEMessageViewController(), animated: true)
//        case 2:
//            
//        case 3:
//            
        case 4:
            let SB = UIStoryboard.init(name: "ZPersonalCenter", bundle: nil)
            let costVC = SB.instantiateViewControllerWithIdentifier("ZECostViewController")
            self.navigationController!.pushViewController(costVC, animated: true)
            
        case 5:
            THURLNavigation.pushViewController(ZESuggestionViewController.init(), animated: true)
        case 6:
            let numberStr = "40088889999"
            let webView = UIWebView()
            let url = NSURL(string: "tel:\(numberStr)")
            let request = NSURLRequest(URL: url!)
            webView.loadRequest(request)
            self.view.addSubview(webView)
            
        default:
            break
        }
    }
}
